{"version":3,"sources":["sourceMap"],"names":["_0x458332","_0x3f9bff","_0x26a44d","_0x54dedf","_0x29483c","_0x5841dc","_0x43320a","_0x4cb0ad","_0xe6fc17","_0x4195e1","_0x2d6681","_0x1960f5","_0x4a755b","_0x4941fb","_0x56fb1a","_0x2f0f20","_0x1d7ee6","_0x48154b","_0x19ece8","_0x1c2ea7","_0x1c5d02","_0x3c45b6","_0x71100a","_0x9463c","_0x2e8d7c","_0x13695a","_0x102e97","_0x3ac0ad","_0x11d2aa","_0x3c1f5a","_0x4862e3","_0x479e08","_0x20a3c6","_0x5f1856","_0x14c9a2","_0x2900b4","_0x563fc8","exports","module","_0x451a49","_0x12039a","define","_0x40e48c","_0x2527e8","_0x17bbdb","_0xbd542c","_0x16eb4d","_0x44bf09","_0x3023d2","_0x2ed6cd","_0x42e00b","_0x9b7110","_0x3b202b","_0x43d3b8","_0x1c1c8a","_0x316f61","_0x51c77b","_0x1dff64","_0x4a4e82","_0x5242a3","_0x1594c0","_0x5d55be","_0x11f239","_0xe9698c","_0x474812","_0x42b3e7","_0x53ddac","_0x19576a","_0x2efc47","_0x5d42d1","_0x4bc355","_0x2bebc4","_0x589b80","_0x3653fd","_0x25d047","_0x5bdb9a","_0x41a423","_0x3c7ec5","_0x4e42f9","_0x5b5205","_0x237a1c","_0x43566b","_0x1d4895","_0x3a52ac","_0x35414","_0x40ea","_0x3b765f","_0x5f3898","_0x5e5300","_0x14e85b","_0x4397e4","_0x3de3aa","_0x4deefc","_0x26f7d9","_0x58a278","_0x23e80b","_0x5c1c15","_0x5f51b5","_0x456e9c","_0x3048e1","_0x50d8dd","_0x43528a","_0x43d82f","_0x506f92","_0x5533f3","_0x522381","_0x2c4889","_0x4d7c10","_0x29d424","_0x1fd478","_0x4a2be9","_0x25a8dd","_0x473254","_0x94e5a0","_0x3655ba","_0x12762d","Object","_0x53250f","_0x22caa4","_0x479bc9","_0x2a2288","Number","String","_0x334441","_0x177399","_0x4e8740","_0x5a2f36","_0x2cd33b","_0x58e14e","_0x395dad","_0x30ea9f","_0x355ece","_0x15d314","console","_0x27b1ee","_0xde59f0","_0x4156c8","_0x4cd732","_0x5abcc1","_0x4b4c72","Array","_0x34e308","_0x193e92","_0x5a9c92","_0x5e0c27","_0x70fcf0","_0x440ecd","_0x2e0574","_0x22cf3d","_0x1aa096","_0x365fb0","_0x4845b2","_0x5b4108","_0x876f9f","_0x4c0566","_0xb735bd","_0x4f9f9a","_0x27ed4d","_0x4bae2e","_0x28e5da","_0x50b22a","_0x4e0617","_0x20e3f6","_0x58bb5c","_0x1497be","_0x1f2b98","_0x11282f","_0x3c9e63","_0x37aec9","_0x534a8a","_0x238e08","_0x4ec1c5","_0x169d9e","_0x239427","_0x3765e2","_0x4c2c08","_0x12bb4a","_0x4d31cb","_0xd2278c","_0x4620de","_0x337362","document","_0x8d95d3","_0x40dda8","_0x2b3355","_0x19b16f","_0x257924","_0x1a886b","_0x365db0","_0x34e539","_0x1d8b92","_0x4a84fc","_0x532eb6","_0x2aa2aa","_0x3c1a8c","_0x15c780","_0x24f738","_0x558d24","_0x5e97cc","_0xbd4ef1","_0x32d480","_0x1fc7fd","_0x380ddc","_0x4dc6d8","_0x1faee1","_0x5726b3","_0x1cc387","_0x58a8b4","_0x4ff1d1","_0xc61cff","_0x1703e0","_0x197d42","_0x477b37","_0x8b8477","_0xdcb95b","_0x55890c","_0x2d7ade","_0x3abb58","_0x15e68c","_0x59659d","_0x9ac61c","_0x519782","_0x125621","_0x164acd","_0x1d7df3","_0x13128b","_0x11242c","_0x1d6ea7","_0x4d8213","single","_0x1b4f8a"],"mappings":"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","sourcesContent":["/*\n * Eremento v1.0.4\n *\n * @author hxAri\n * @create 27.02-2022\n * @update 06.05-2022\n * @github https://github.com/hxAri\n *\n * All source code license under MIT.\n * Please see the MIT documentation for details.\n *\n * Copyright (c) 2022 hxAri <ari160824@gmail.com>\n */\n( function( global, factory ) {\n    if( typeof exports === \"object\" && typeof module !== \"undefined\" ) {\n        module.exports = factory();\n    } else {\n        if( typeof define === \"function\" && define.amd ) {\n            define( factory );\n        } else {\n            global.Eremento = factory();\n        }\n    }\n}( this, function() {\n    \n    const $Error = 3;\n    const $TypeError = 3517;\n    const $AttributeError = 3526;\n    const $ParameterError = 3534;\n    const $ReferenceError = 3536;\n    const $ConnectionError = 3548;\n    const $UnexpectedError = 3561;\n    \n    function Null()\n    {\n        return( null );\n    }\n    \n    function Defined( args )\n    {\n        return( typeof args !== \"undefined\" );\n    }\n    \n    function Undefined( args )\n    {\n        return( typeof args === \"undefined\" );\n    }\n    \n    /*\n     * Get value type or match value type.\n     *\n     * @params Mixed $params\n     * @params Function $object\n     * @params Function $handler\n     * @params Function $catcher\n     *\n     * @return Mixed\n     */\n    const $Type = function( params, object, handler, catcher )\n    {\n        var closure = {\n            handler: () => typeof handler === \"function\" ? handler( params ) : true,\n            catcher: () => typeof catcher === \"function\" ? catcher( params ) : false\n        };\n        \n        if( typeof object === \"function\" )\n        {\n            return( $Type( params ) === object.name ? closure.handler() : closure.catcher() );\n        } else {\n            if( typeof object === \"object\" )\n            {\n                for( let i in object )\n                {\n                    if( $Type( params, object[i] ) )\n                    {\n                        return( closure.handler() );\n                    }\n                }\n                return( closure.catcher() );\n            }\n        }\n        return( Object.prototype.toString.call( params ).replace( /\\[object\\s*(.*?)\\]/, `$1` ) );\n    };\n    \n    /*\n     * Display error messages by error type or level.\n     *\n     * @params Number $type\n     * @params Object $option\n     */\n    const $Except = function( type, option )\n    {\n        if( $Type( type, Number ) && $Type( option, [ String, Object ] ) )\n        {\n            switch( type )\n            {\n                case $Error:\n                    break;\n                case $TypeError:\n                    if( option.on && option.name && option.type && option.vtype )\n                    {\n                        console.error( `${option.on}: The value of the ${option.type} ${option.name} must be of type ${option.vtype}, ${$Type( option.given )} given.` );\n                    }\n                    break;\n                case $AttributeError:\n                    if( option.on && option.name )\n                    {\n                        if( option.type )\n                        {\n                            console.error( `${option.on}: Attribute .${option.name} must be of type ${option.type}, ${$Type( option.given )} given.` );\n                        } else {\n                            if( option.value )\n                            {\n                                if( $Type( option.value, Array ) )\n                                {\n                                    option.value = option.value.join( \"|\" );\n                                }\n                                console.error( `${option.on}: The .${option.name} attribute must have a value of /${option.value}/, ${option.given} is given.` );\n                            } else {\n                                console.error( `${option.on}: The .${option.name} attribute is undefined or may be deleted.` );\n                            }\n                        }\n                    }\n                    break;\n                case $ParameterError:\n                    if( option.on && option.name )\n                    {\n                        if( option.type )\n                        {\n                            console.error( `${option.on}: The parameter ${option.name} must be of type ${option.type}, ${$Type( option.given )} given.` );\n                        } else {\n                            if( option.value )\n                            {\n                                if( $Type( option.value, Array ) )\n                                {\n                                    option.value = option.value.join( \"|\" );\n                                }\n                                console.error( `${option.on}: The ${option.name} parameter must have a value of /${option.value}/, ${option.given} is given.` );\n                            } else {\n                                console.error( `${option.on}: The ${option.name} parameter is undefined.` );\n                            }\n                        }\n                    }\n                    break;\n                case $ReferenceError:\n                    if( option.on && option.name && option.type )\n                    {\n                        console.error( `${option.on}: The ${option.type} reference ${option.name} is undefined.` );\n                    }\n                    break;\n                case $ConnectionError:\n                    break;\n                case $UnexpectedError:\n                    break;\n                default:\n                    break;\n            }\n            return;\n        }\n        $Except( $UnexpectedError, \"\" );\n    };\n    \n    /*\n     * Build single element HTML.\n     *\n     * @params Object $params\n     *\n     * @return HTMLElement\n     */\n    function create( el )\n    {\n        if( $Type( el.name, String ) )\n        {\n            \n            // Create root element.\n            var root = document.createElement( el.name );\n            \n            // If the element has no data.\n            if( $Type( el.data, Undefined ) )\n            {\n                el.data = {};\n            }\n            \n            // Inject data.\n            root.data = el.data;\n            \n            // If element has attribute.\n            if( $Type( el.self, Object ) )\n            {\n                for( let i in el.self )\n                {\n                    switch( i )\n                    {\n                        case \"data\":\n                        case \"dataset\":\n                            if( $Type( el.self[i], Object ) )\n                            {\n                                for( let d in el.self[i] )\n                                {\n                                    root.dataset[d] = replace( el.self[i][d] );\n                                }\n                            } else {\n                                $Except( $AttributeError, {\n                                    on: \"Element.create\",\n                                    name: i,\n                                    type: \"Object\",\n                                    given: el.self[i]\n                                });\n                            }\n                            break;\n                        case \"innerHTML\":\n                            if( $Type( el.self.innerHTML, Array ) )\n                            {\n                                multiple( root, el.self.innerHTML );\n                            } else {\n                                if( $Type( el.self.innerHTML, Object ) )\n                                {\n                                    root.appendChild( create( el.self.innerHTML ) )\n                                } else {\n                                    root.innerHTML = replace( el.self.innerHTML );\n                                }\n                                \n                            }\n                            break;\n                        default:\n                            if( $Type( el.self[i], String ) )\n                            {\n                                el.self[i] = replace( el.self[i] );\n                            }\n                            root[i] = el.self[i];\n                            break;\n                    }\n                }\n            }\n            \n            return( root );\n        } else {\n            return( $Except( $AttributeError, {\n                on: \"Element.create\",\n                name: \"name\",\n                type: \"String\",\n                given: el.name\n            }));\n        }\n    }\n    \n    /*\n     * Build or add more than one HTML element to root.\n     *\n     * @params HTMLElement, Array $root\n     * @params Array $params\n     *\n     * @return Array\n     */\n    function multiple( root, els )\n    {\n        if( $Type( els, Array ) )\n        {\n            for( let i in els )\n            {\n                root.appendChild( create( els[i] ) )\n            }\n            return( root );\n        }\n        if( $Type( root, Array ) )\n        {\n            return( multiple( {}, root ) );\n        }\n        for( let i in els )\n        {\n            els[i] = single( els[i] );\n        }\n        return( els );\n    }\n    \n    /*\n     * Replace sensitive characters.\n     *\n     * @params String $string\n     *\n     * @return String\n     */\n    function replace( string )\n    {\n        return(\n            String( string )\n            .replace( /\\&/g, \"&amp;\" )\n            .replace( /\\</g, \"&#60;\" )\n            .replace( /\\>/g, \"&#62;\" )\n            .replace( /\\\"/g, \"&#34;\" )\n            .replace( /\\'/g, \"&#39;\" )\n        );\n    }\n    \n    return({\n        type: $Type,\n        except: $Except,\n        create: create,\n        multiple: multiple\n    });\n    \n}));"]}
